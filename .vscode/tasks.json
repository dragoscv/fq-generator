{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "dev: Start Development Server",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "nextjs",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error)\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "- Local:",
          "endsPattern": "‚úì Ready in"
        }
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "deploy: Deploy to Vercel (Production)",
      "type": "shell",
      "command": "vercel",
      "args": ["--prod"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "dependsOn": ["build: Build for Production"],
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "deploy: Deploy to Vercel (Preview)",
      "type": "shell",
      "command": "vercel",
      "args": [],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "dependsOn": ["build: Build for Production"],
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "build: Build for Production",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc", "$eslint-stylish"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "dependsOn": ["lint: Check All Files"]
    },
    {
      "label": "start: Start Production Server",
      "type": "shell",
      "command": "pnpm",
      "args": ["start"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "isBackground": true,
      "dependsOn": ["build: Build for Production"],
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "test: Run All Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "vitest",
        "pattern": [
          {
            "regexp": "^\\s*(.*):(\\d+):(\\d+)\\s*$",
            "file": 1,
            "line": 2,
            "column": 3
          }
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "test: Run Tests (Watch Mode)",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:watch"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "vitest",
        "pattern": [
          {
            "regexp": "^\\s*(.*):(\\d+):(\\d+)\\s*$",
            "file": 1,
            "line": 2,
            "column": 3
          }
        ],
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Watching for file changes",
          "endsPattern": "waiting for file changes"
        }
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "test: E2E Tests (Playwright)",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:e2e"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "playwright",
        "pattern": [
          {
            "regexp": "^\\s*(.*):(\\d+):(\\d+)\\s*(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "message": 4
          }
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "test: Audio System Tests",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:run", "src/test/audioStore"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "vitest",
        "pattern": [
          {
            "regexp": "^\\s*(.*):(\\d+):(\\d+)\\s*$",
            "file": 1,
            "line": 2,
            "column": 3
          }
        ]
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "lint: Check All Files",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": "$eslint-stylish",
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "lint: Fix Auto-fixable Issues",
      "type": "shell",
      "command": "pnpm",
      "args": ["lint", "--fix"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": "$eslint-stylish",
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "format: Format Code (Prettier)",
      "type": "shell",
      "command": "pnpm",
      "args": ["format"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "deps: Install Dependencies",
      "type": "shell",
      "command": "pnpm",
      "args": ["install"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "deps: Update Dependencies",
      "type": "shell",
      "command": "pnpm",
      "args": ["update"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "deps: Check Outdated Packages",
      "type": "shell",
      "command": "pnpm",
      "args": ["outdated"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "audio: Debug Audio System",
      "type": "shell",
      "command": "node",
      "args": ["-e", "console.log('üéµ Audio System Debug'); const fs = require('fs'); if(fs.existsSync('./test-audio.html')) { console.log('‚úÖ test-audio.html exists'); console.log('Open file:///' + __dirname.replace(/\\\\/g, '/') + '/test-audio.html in browser'); } else { console.log('‚ùå test-audio.html not found'); }"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "type: Type Check",
      "type": "shell",
      "command": "pnpm",
      "args": ["type-check"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": "$tsc",
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "clean: Clean Build Artifacts",
      "type": "shell",
      "command": "pnpm",
      "args": ["clean"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "project: Full Quality Check",
      "type": "shell",
      "command": "echo",
      "args": ["Running full quality check..."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": [
        "lint: Check All Files",
        "type: Type Check",
        "test: Run All Tests",
        "build: Build for Production"
      ],
      "dependsOrder": "sequence",
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "project: Development Setup",
      "type": "shell",
      "command": "echo",
      "args": ["Setting up development environment..."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": [
        "deps: Install Dependencies",
        "lint: Check All Files",
        "type: Type Check"
      ],
      "dependsOrder": "sequence",
      "options": {
        "cwd": "${workspaceFolder}"
      }
    }
  ]
}
